<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/netfx/2009/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cairo="clr-namespace:CairoDesktop">
    <!-- Menu item common resources -->
    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" x:Key="CairoMenuItemHoverGradient">
        <GradientStop Color="#8F1A4DFF" Offset="0.0" />
        <GradientStop Color="#DF338FFF" Offset="1.0" />
    </LinearGradientBrush>
    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="CairoMenuBackgroundGradient">
        <GradientStop Color="#cF0f0f0f" Offset="0" />
        <GradientStop Color="#bf1a1a1a" Offset="0.8" />
        <GradientStop Color="#cF0f0f0f" Offset="1" />
    </LinearGradientBrush>
    <DropShadowEffect x:Key="CairoMenuShadow" Color="Black" ShadowDepth="4" Direction="270" Opacity="0.6" BlurRadius="10" />
    
    <!-- Menu bar images -->
    <BitmapImage x:Key="CairoMenuIcon" UriSource="pack://application:,,,/CairoDesktop;component/Resources/cairoMenuBlack.png"></BitmapImage>
    <BitmapImage x:Key="CairoSearchIcon" UriSource="pack://application:,,,/CairoDesktop;component/Resources/searchBlack.png"></BitmapImage>
    <BitmapImage x:Key="MenubarBackground" UriSource="pack://application:,,,/CairoDesktop;component/Resources/menubarWhite.png"></BitmapImage>
    <BitmapImage x:Key="MenubarShadow" UriSource="pack://application:,,,/CairoDesktop;component/Resources/menubarShadow.png"></BitmapImage>
    
    <!-- Main menu bar background style -->
    <Style x:Key="MenuBarStyle"
        TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="{StaticResource MenubarBackground}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Main menu bar item style -->
    <Style x:Key="CairoMenuItemStyle"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground"
            Value="#FF000000" />
        <Setter Property="FontFamily"
                                Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                    MinWidth="17"
                                    Width="Auto"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3"
                                    Width="14" />
                            </Grid.ColumnDefinitions>
                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0"
                                Margin="8,0,6,0"
                                x:Name="Icon"
                                VerticalAlignment="Center"
                                ContentSource="Icon" />
                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0"
                                Visibility="Hidden"
                                Margin="4,0,6,0"
                                x:Name="GlyphPanel"
                                VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath"
                                    VerticalAlignment="Center"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                    FlowDirection="LeftToRight" />
                            </Grid>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header" />
                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                Margin="8,1,8,1"
                                x:Name="IGTHost"
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center" />
                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3"
                                Margin="4,0,6,0"
                                x:Name="ArrowPanel"
                                VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Fill="{TemplateBinding Foreground}"
                                    Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Fade"
                                AllowsTransparency="True">
                                <Border x:Name="SubMenuBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderBrush"
                                                Value="#FF12367F" />
                                            <Setter Property="BorderThickness"
                                                Value="0,1,0,0" />
                                            <Setter Property="Margin"
                                                    Value="5,0,5,11" />
                                            <Setter Property="Effect"
                                                Value="{StaticResource ResourceKey=CairoMenuShadow}" />
                                        </Style>
                                    </Border.Style>
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="{StaticResource ResourceKey=CairoMenuBackgroundGradient}" />
                                                <Setter Property="BorderBrush"
                                                    Value="#AF5b5b5b" />
                                                <Setter Property="BorderThickness"
                                                    Value="1,0,1,1" />
                                                <Setter Property="CornerRadius"
                                                    Value="0,0,5,5" />
                                                <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                            </Style>
                                        </Border.Style>
                                        <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Grid>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                            Value="TopLevelHeader">
                            <Setter Property="Padding"
                                Value="13,1,13,0" />
                            <Setter Property="Margin"
                                Value="0,-2,0,0" />
                            <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                            <Setter Property="MinWidth"
                                Value="0"
                                TargetName="Col0" />
                            <Setter Property="Width"
                                Value="Auto"
                                TargetName="Col3" />
                            <Setter Property="Height"
                                Value="22" />

                            <Setter Property="FontSize"
                                Value="14" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="IGTHost" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="White"
                                                        ShadowDepth="1"
                                                                  Direction="270"
                                                        Opacity="0.3" BlurRadius="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border">
                                <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                            Value="TopLevelItem">
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="SubMenuHeader" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role"
                            Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock"
                                Value="Top" />
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="SubMenuItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role"
                            Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock"
                                Value="Top" />
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="ArrowPanel" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon"
                            Value="{x:Null}">
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                        </Trigger>
                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked"
                            Value="true">
                            <Setter Property="Visibility"
                                Value="Visible"
                                TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                Value="Collapsed"
                                TargetName="Icon" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CairoMenuItemThinStyle"
        TargetType="{x:Type MenuItem}" BasedOn="{StaticResource CairoMenuItemStyle}">
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <!-- Stacks -->
    <Style x:Key="CairoStacksStyle"
        TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground"
            Value="#FF000000" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                    SharedSizeGroup="MenuTextColumnGroup" />
                            </Grid.ColumnDefinitions>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header" />
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Right"
                                x:Name="SubMenuPopup"
                                Focusable="false"
                                PopupAnimation="Slide"
                                AllowsTransparency="True">
                                <StackPanel>
                                    <Border x:Name="SubMenuBorder">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="BorderBrush"
                                                Value="#FF12367F" />
                                                <Setter Property="BorderThickness"
                                                Value="0,1,0,0" />
                                            </Style>
                                        </Border.Style>
                                        <Border>
                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Background" Value="{StaticResource ResourceKey=CairoMenuBackgroundGradient}" />
                                                    <Setter Property="BorderBrush"
                                                    Value="#AF5b5b5b" />
                                                    <Setter Property="BorderThickness"
                                                    Value="0,0,0,1" />
                                                    <Setter Property="Padding"
                                                    Value="0,5,0,5" />
                                                </Style>
                                            </Border.Style>
                                            <Grid x:Name="SubMenu"
                                            Grid.IsSharedSizeScope="True">
                                                <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                                <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <Image Source="{StaticResource MenubarShadow}" Stretch="Fill" Width="{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}" Height="16"/>
                                </StackPanel>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                            Value="TopLevelHeader">
                            <Setter Property="Padding"
                                Value="13,1,13,0" />
                            <Setter Property="Margin"
                                Value="0,-2,0,0" />
                            <Setter Property="Placement"
                                Value="Bottom"
                                TargetName="SubMenuPopup" />
                            <Setter Property="Height"
                                Value="22" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                            <Setter Property="FontSize"
                                Value="14" />
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="White"
                                                        ShadowDepth="1"
                                                                  Direction="270"
                                                        Opacity="0.3" BlurRadius="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelHeader" />
                                <Condition Property="IsSubmenuOpen"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border">
                                <Setter.Value>
                                    <!-- Pressed Menubar State -->
                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                        <GradientStop Color="#8F1A4DB5" Offset="1.0" />
                                        <GradientStop Color="#DF338FFF" Offset="0.0" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role"
                                    Value="TopLevelItem" />
                                <Condition Property="IsMouseOver"
                                    Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                TargetName="Border" Value="{StaticResource CairoMenuItemHoverGradient}"/>
                        </MultiTrigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                            Value="TopLevelItem">
                            <Setter Property="Padding"
                                Value="0,3,0,0" />
                            <Setter Property="MinHeight"
                                Value="24" />
                            <Setter Property="Foreground"
                                Value="#FFFFFFFF" />
                            <Setter Property="FontSize"
                                Value="12" />
                            <Setter Property="FontFamily"
                                Value="Segoe UI" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style for Systray Expander -->
    <Style x:Key="CairoSystrayExpanderStyle"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
            Value="true" />
        <Setter Property="Height"
            Value="22" />
        <Setter Property="Foreground"
            Value="Black" />
        <Setter Property="FontSize"
            Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                        BorderThickness="0"
                        Margin="0,0,0,0"
                        Background="Transparent"
                        BorderBrush="Transparent" Opacity="0.7">
                        <Path x:Name="Path" Margin="5,-2,9,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M 4 0 L 4 8 L 0 4 Z" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                            Value="true">
                            <Setter TargetName="Border"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="White"
                                            ShadowDepth="0"
                                            Opacity="0.5" BlurRadius="7" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                            Value="true">
                            <Setter TargetName="Border"
                                    Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="White"
                                            ShadowDepth="0"
                                            Opacity="1" BlurRadius="7" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                            Value="true">
                            <Setter TargetName="Path" Property="Data" Value="M 0 0 L 4 4 L 0 8 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
